#!/usr/bin/env bash
###################################################################################################
# Find Sequence Text: Search for a phrase or a sequence of phrases in files within the current
# directory and its subdirectories.
#
# Usage:
#&  `echo_yellow "${EXEC_NAME} [--help]" -en`
#     Show this help.
#
#&  `echo_yellow "${EXEC_NAME} [grep-options:-iw] query" -en`
#&    Search for `echo_yellow "query" -en`.
#
#&  `echo_yellow "${EXEC_NAME} - [grep-options:-iw] query" -en`
#&    Search for `echo_green "transformed" -en` `echo_yellow "query" -en`.
#
#&  `echo_yellow "${EXEC_NAME} -- [-iw] query" -en`
#&    Search for `echo_yellow "query" -en` without excluding folders listed in `echo_yellow .findignore -en`.
#
#&  `echo_yellow "${EXEC_NAME} [-iw] query [-iw] query_2 [-iw] [...]" -en`
#&    Search for `echo_yellow "query query_2 [...]" -en`.
###################################################################################################
BASE_DIR=`cd $(dirname "$0"); pwd`
. $BASE_DIR/../../include/src

SET_TRANFOMR=1
if [ "x${1}" = "x-" ]
then
  shift
  SET_TRANFOMR=0
fi

CHECK_EXCLUDE=0
if [ "x${1}" = "x--" ]
then
  shift
  CHECK_EXCLUDE=1
fi

# Show help
if [ "x${1}" = "x" ] || [ "x${1}" = "x--help" ]
then
  inc_itselfHelp
fi

function __setTransform()
{
  if [ $SET_TRANFOMR -ne 0 ]
  then
    echo "${1}"
    return
  fi

  echo "$1" | sed 's/\//./g'
}

OPTIONS=
if [ "x${1:0:1}" = 'x-' ]
then
  OPTIONS="${1}"
  shift
fi

TEXT_SEARCH=`echo "${1}" | sed 's#'"'"'#'"'"'"'"'"'"'"'"'#g'`
TEXT_SEARCH=`__setTransform "${TEXT_SEARCH}"`
shift

IGNORE_LIST=' '
if [ $CHECK_EXCLUDE -eq 0 ] && [ -f .findignore ]
then
  while IFS=$'\n' read -r line
  do
    line=`echo "${line}" | sed 's:/*$::'`
    if [ "x${line}" != "x" ]
    then
      if [ -e "${line}" ]
      then
        IGNORE_LIST="${IGNORE_LIST} ! -name '${line}'"
      else
        IGNORE_LIST="${IGNORE_LIST} ! -path '${line}' "
      fi
    fi
  done < .findignore
  IFS=$PRI_IFS
fi

COMMAND="find . -type f ! -path '*/.git/*' ! -path '*/node_modules/*' ${IGNORE_LIST} -exec grep ${OPTIONS} '${TEXT_SEARCH}' {} \+"

OPTIONS=
for SECONDARY_TS in $@
do
  if [ "x${SECONDARY_TS:0:1}" = 'x-' ]
  then
    OPTIONS="${OPTIONS} ${SECONDARY_TS}"
  else
    COMMAND="${COMMAND} | grep ${OPTIONS} '${SECONDARY_TS}'"
    OPTIONS=
  fi
done

eval $COMMAND 2>/dev/null

