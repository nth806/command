#!/bin/bash
################################################################################
# Git utility
#
# List support commands:
#&`cpnt_helpList "${BASE_DIR}/component/gtu" CMD_DESC`
# Help usage:
#&  `echo_yellow "${EXEC_NAME} [help|-h|--help]" -en`
#     Show this help.
#
#&  `echo_yellow "${EXEC_NAME} [help|-h|--help] <comand>" -en`
#&    Show the help of `echo_yellow "<command>" -en`.
################################################################################
BASE_DIR=`cd $(dirname "$0"); pwd`
GTU_DIR="${BASE_DIR}/component/gtu"

# Include common functions of bash
for lc_script in `find $BASE_DIR/include -maxdepth 2 -type f -name '*.sh'`
do
. $lc_script
done

# Check first parameter
if [ "x${1}" = "x" ]
then
  inc_itselfHelp 'Please input your command.'
fi

# Show help
if [ "x${1}" = "x-h" ] || [ "x${1}" = "x--help" ] || [ "x${1}" = "xhelp" ]
then
  if [ "x${2}" = "x" ]
  then
    inc_itselfHelp
  fi

  if [ ! -f "${GTU_DIR}/${2}.sh" ]
  then
    inc_itselfHelp 'There is no command `'${2}'`.';
  fi

  inc_helpComponent
  CMD_NAME=${2}
  cpnt_help "${GTU_DIR}/${2}.sh"
  exit
fi

if [ ! -f "${GTU_DIR}/${1}.sh" ]
then
  inc_itselfHelp 'There is no command `'${1}'`.';
fi

# Main process
CMD_NAME=${1}
shift
. "${GTU_DIR}/${CMD_NAME}.sh"
_run 
